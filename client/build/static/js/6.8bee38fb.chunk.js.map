{"version":3,"sources":["components/linkcrud/CloseButton.js","components/linkcrud/LinkEditor.js"],"names":["CloseButton","setProcessNull","useProcessLink","type","onClick","LinkEditor","updateLinkinLinks","useLinks","processLink","link","_id","full","short","useState","newShortLink","setNewShortLink","error","setError","updateLink","event","preventDefault","newLink","axios","put","then","res","updateState","catch","err","onSubmit","style","display","shortlyUrl","onChange","target","value","required","pattern","title","id"],"mappings":"oGAAA,mCAYeA,IAPK,WAAO,IACfC,EAAmBC,cAAnBD,eACR,OACI,kBAAC,IAAD,CAAQE,KAAK,SAASC,QAASH,GAA/B,W,8ICqCOI,UApCI,WAAO,IACdC,EAAsBC,cAAtBD,kBADa,EAEqDJ,cAFrD,IAEbM,YAAcC,EAFD,EAECA,KAFD,IAEOA,KAAOC,EAFd,EAEcA,IAAKC,EAFnB,EAEmBA,KAAMC,EAFzB,EAEyBA,MAASX,EAFlC,EAEkCA,eAFlC,EAGqBY,mBAASD,GAH9B,mBAGbE,EAHa,KAGCC,EAHD,OAIOF,qBAJP,mBAIbG,EAJa,KAINC,EAJM,KAafC,EAAa,SAACC,GAEhB,GADAA,EAAMC,iBACFN,IAAiBF,EAAO,OAAOK,EAAS,wBAC5C,IAAMI,EAAO,eAAOZ,EAAP,CAAaG,MAAOE,IACjCQ,IAAMC,IAAN,qBAAwBb,GAAOW,GAC9BG,MAAM,SAAAC,GAAG,OATM,SAACJ,GACjBpB,IACAK,EAAkBe,GAOJK,CAAYL,MACzBM,OAAO,SAAAC,GAAG,OAAIX,EAAS,uCAE5B,OACQ,kBAAC,IAAD,CAAWY,SAAU,SAACV,GAAD,OAAWD,EAAWC,KACnC,iDACA,2BAAIR,GACJ,yBAAKmB,MAAO,CAACC,QAAS,SAClB,2BAAIC,KACJ,2BAAOC,SAtBN,SAACd,GAClBF,EAAS,MACTF,EAAgBI,EAAMe,OAAOC,QAoBkBA,MAAOrB,EAAcsB,UAAQ,EAACC,QAAQ,qBAAqBC,MAAM,iDAElGtB,GAAS,kBAAC,IAAD,CAAOA,MAAOA,IACzB,kBAAC,IAAD,CAAeuB,GAAG,UAAlB,UACA,kBAAC,IAAD","file":"static/js/6.8bee38fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from '../Styles';\r\nimport { useProcessLink } from '../../hooks/useProcessLink';\r\n\r\n\r\nconst CloseButton = () => {\r\n    const { setProcessNull } = useProcessLink();\r\n    return (\r\n        <Button type=\"button\" onClick={setProcessNull}>Close</Button>\r\n    )\r\n};\r\n\r\nexport default CloseButton;\r\n\r\n","import React, { useState } from 'react';\r\nimport { PrimaryButton, LinkModal } from '../Styles';\r\nimport axios from 'axios';\r\nimport { shortlyUrl } from '../../utilities/url';\r\nimport Error from '../Error';\r\nimport CloseButton from './CloseButton';\r\nimport { useProcessLink } from '../../hooks/useProcessLink';\r\nimport { useLinks } from '../../hooks/useLinks';\r\n\r\nconst LinkEditor = () => {\r\n    const { updateLinkinLinks } = useLinks();\r\n    const { processLink: {link, link: {_id, full, short}}, setProcessNull } = useProcessLink();\r\n    const [ newShortLink, setNewShortLink ] = useState(short);\r\n    const [ error, setError ] = useState();\r\n    const handleChange = (event) => {\r\n        setError(null);\r\n        setNewShortLink(event.target.value);\r\n    };\r\n    const updateState = (newLink) => {\r\n        setProcessNull(); \r\n        updateLinkinLinks(newLink);\r\n    }\r\n    const updateLink = (event) => {\r\n        event.preventDefault();\r\n        if (newShortLink === short) return setError('Url same as existing');\r\n        const newLink = {...link, short: newShortLink};\r\n        axios.put(`/api/links/${_id}`, newLink)\r\n        .then( res => updateState(newLink))            \r\n        .catch( err => setError('Update failed, please try again'));\r\n    }\r\n    return (\r\n            <LinkModal onSubmit={(event) => updateLink(event)}>\r\n                    <h3>Edit Shortly Link</h3>\r\n                    <p>{full}</p>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <p>{shortlyUrl}</p>\r\n                        <input onChange={handleChange} value={newShortLink} required pattern=\"^[a-z0-9_-]{3,16}$\" title=\"Letters and numbers between 3-16 characters\"/>\r\n                    </div>\r\n                    { error && <Error error={error}/> }\r\n                    <PrimaryButton id=\"update\">Update</PrimaryButton>\r\n                    <CloseButton/>\r\n            </LinkModal> \r\n    )\r\n};\r\n\r\nexport default LinkEditor;\r\n"],"sourceRoot":""}