{"version":3,"sources":["hooks/useCopyLink.js","components/links/CopyShortLink.js","components/links/LinkCopyButton.js","components/links/IndexLinks.js"],"names":["useCopyLink","useState","copiedLink","setCopiedLink","copyLink","event","newState","target","previousSibling","select","document","execCommand","focus","ShortUrl","styled","input","cyan","breakpoint","CopyShortLink","shortUrl","readOnly","className","value","shortlyUrl","Button","PrimaryButton","violet","DisabledButton","darkViolet","LinkCopyButton","id","type","disabled","onClick","LinkContainer","div","alignWidth","smallerWidth","Link","FullLink","IndexLinks","useLinks","links","setLinksFromBrowser","useEffect","map","_id","full","key"],"mappings":"yJAEaA,EAAc,WAAO,IAAD,EACSC,oBAAS,GADlB,mBACrBC,EADqB,KACTC,EADS,KAU5B,MAAO,CACHD,aACAE,SATY,SAACC,EAAOC,GACrBD,EAAME,OAAOC,gBAAgBC,SAC7BC,SAASC,YAAY,QACrBN,EAAME,OAAOK,QACbT,EAAcG,O,2fCJtB,IAAMO,EAAWC,IAAOC,MAAV,IAEDC,IASYC,KAcVC,EANO,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACI,kBAACN,EAAD,CAAUO,SAAS,WAAWC,UAAU,YAAYC,MAAOC,IAAaJ,K,4XCtBhF,IAAMK,EAASV,YAAOW,IAAPX,CAAH,IAKUY,KAKhBC,EAAiBb,YAAOU,EAAPV,CAAH,IACFc,IAEIA,KAiBPC,EAXQ,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,GAAI5B,EAA0B,EAA1BA,WAAYE,EAAc,EAAdA,SACrC,OACI,oCACEF,IAAe4B,EACX,kBAACH,EAAD,CAAgBI,KAAK,SAASC,SAAS,QAAvC,UACA,kBAACR,EAAD,CAAQH,UAAU,cAAcY,QAAS,SAAC5B,GAAD,OAAWD,EAASC,EAAOyB,KAApE,U,45BCpBd,IAAMI,EAAgBpB,IAAOqB,IAAV,IAGNC,IAGYnB,IACRoB,KAKXC,EAAOxB,IAAOqB,IAAV,IAGGC,IAIYnB,IAIRoB,KAIXE,EAAWzB,IAAOqB,IAAV,IAQWlB,KA0BVuB,UAnBI,WAAO,IAAD,EACkBC,cAA/BC,EADa,EACbA,MAAOC,EADM,EACNA,oBADM,EAEY3C,cAAzBE,EAFa,EAEbA,WAAYE,EAFC,EAEDA,SAEpB,OADAwC,oBAAUD,EAAqB,IAE/B,kBAACT,EAAD,CAAeb,UAAU,iBAErBqB,EAAMG,KAAK,YAAkB,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KACd,OAAO,kBAACT,EAAD,CAAMU,IAAKF,EAAKzB,UAAU,QAC7B,kBAACkB,EAAD,KAAWQ,GACX,kBAAC,EAAD,CAAe5B,SAAU2B,IACzB,kBAAC,EAAD,CAAgBhB,GAAIgB,EAAK5C,WAAYA,EAAYE,SAAUA","file":"static/js/7.520af2a3.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useCopyLink = () => {\r\n    const [ copiedLink, setCopiedLink ] = useState(false);\r\n\r\n    const copyLink = (event, newState) => {\r\n        event.target.previousSibling.select();\r\n        document.execCommand('copy');\r\n        event.target.focus();\r\n        setCopiedLink(newState);\r\n    }\r\n    \r\n     return {\r\n         copiedLink, \r\n         copyLink\r\n     }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { breakpoint, cyan } from '../Styles';\r\nimport { shortlyUrl } from '../../utilities/url';\r\n\r\nconst ShortUrl = styled.input`\r\n    flex: 2;\r\n    color: ${cyan};\r\n    display: block;\r\n    border: none;\r\n    width: 100%;\r\n    height: 5vh;\r\n    margin: 2vh 0 2vh 0;\r\n    outline: none;\r\n    font-size: inherit;\r\n    font-family: inherit;\r\n    @media (min-width: ${breakpoint}) {\r\n        text-align: right;\r\n        margin: 0 2vw 0 2vw;\r\n        width: auto;\r\n    }\r\n    overflow: hidden;\r\n`\r\n\r\nconst CopyShortLink = ({shortUrl}) => {\r\n    return (\r\n        <ShortUrl readOnly=\"readonly\" className=\"shortLink\" value={shortlyUrl + shortUrl}/>\r\n    )\r\n}\r\n\r\nexport default CopyShortLink;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { PrimaryButton, violet, darkViolet } from '../Styles'\r\n\r\nconst Button = styled(PrimaryButton)`\r\n    flex: 1;\r\n    border-radius: 5px;\r\n    padding: 1em;\r\n    &:hover {\r\n        background: ${violet};\r\n    }\r\n    width: 100%;\r\n`\r\n\r\nconst DisabledButton = styled(Button)`\r\n    background: ${darkViolet};\r\n    &:hover {\r\n        background: ${darkViolet};\r\n        opacity: 1;\r\n        cursor: auto;\r\n    }\r\n`\r\n\r\nconst LinkCopyButton = ({id, copiedLink, copyLink}) => {\r\n    return (\r\n        <>\r\n        { copiedLink === id \r\n            ? <DisabledButton type=\"button\" disabled=\"true\">Copied</DisabledButton> \r\n            : <Button className=\"linkcopybtn\" onClick={(event) => copyLink(event, id)}>Copy</Button> \r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LinkCopyButton;","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport CopyShortLink from './CopyShortLink'\r\nimport LinkCopyButton from './LinkCopyButton'\r\nimport { breakpoint, alignWidth, smallerWidth } from '../Styles'\r\nimport { useCopyLink } from '../../hooks/useCopyLink';\r\nimport { useLinks } from '../../hooks/useLinks';\r\n\r\nconst LinkContainer = styled.div`\r\n    position: relative;\r\n    top: -15vh;\r\n    width: ${alignWidth};\r\n    height: min-content;\r\n    margin: auto;\r\n    @media (min-width: ${breakpoint}) {\r\n        width: ${smallerWidth};\r\n        top: -10vh;\r\n    }\r\n`\r\n\r\nconst Link = styled.div`\r\n    min-height: 15vh;\r\n    background: #FFF;\r\n    width: ${alignWidth};\r\n    padding: 2vh 2vw;\r\n    margin: 2vh 0 2vh 0;\r\n    border-radius: 15px;\r\n    @media (min-width: ${breakpoint}){\r\n        display: flex;\r\n        align-items: center;\r\n        height: 10vh;\r\n        width: ${smallerWidth}\r\n    }\r\n`\r\n\r\nconst FullLink = styled.div`\r\n    flex: 3;\r\n    height: 5vh;\r\n    line-height: 5vh;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: auto;\r\n    hyphens: none;\r\n    @media (min-width: ${breakpoint}) {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n`\r\n\r\n \r\nconst IndexLinks = () => {\r\n    const { links, setLinksFromBrowser } = useLinks();\r\n    const { copiedLink, copyLink } = useCopyLink();\r\n    useEffect(setLinksFromBrowser, []);\r\n    return( \r\n    <LinkContainer className=\"linkContainer\">\r\n        {\r\n        links.map( ({_id, full}) => {\r\n            return <Link key={_id} className=\"link\">\r\n                <FullLink>{full}</FullLink>\r\n                <CopyShortLink shortUrl={_id}/>\r\n                <LinkCopyButton id={_id} copiedLink={copiedLink} copyLink={copyLink}/>\r\n            </Link> \r\n        })\r\n        }\r\n    </LinkContainer> \r\n    )\r\n}\r\n\r\nexport default IndexLinks;"],"sourceRoot":""}